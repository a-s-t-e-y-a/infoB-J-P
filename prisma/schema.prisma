// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int    @id @default(autoincrement())
  email       String @unique
  name        String
  phoneNumber String
  dob         String
  password    String
  posts       Post[]
  mundal      Mundal []
  sector      Sector[]
  poolingBooth poolingBooth[]
  karykarta   karykarta[]
  village     village[]
}

model Post {
  id        Int        @id @default(autoincrement())
  title     String
  content   String
  published Boolean
  author    User       @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Mundal {
  id         Int         @id @default(autoincrement())
  author     User @relation(fields:[authorId], references:[id])
  authorId   Int 
  name       String
  karyakarta karykarta[] 
  Sector     Sector[]
}
model Sector {
  id           Int           @id @default(autoincrement())
  name         String
  author       User    @relation(fields:[authorId], references:[id])
  authorId     Int
  mundal       Mundal?       @relation(fields: [mundalId], references: [id], onDelete: Cascade)
  mundalId     Int?          
  karykarta    karykarta[]
  poolingBooth poolingBooth[]
  village      village
}

model village {
  id Int @id @default(autoincrement())
  name String
  author User @relation(fields:[authorId], references:[id])
  authorId Int
  sector Sector? @relation(fields:[sectorId], references:[id], onDelete:Cascade)
  sectorId Int?
}

model poolingBooth {
  id        Int         @id @default(autoincrement())
  name      String
  sector    Sector?     @relation(fields: [sectorId], references: [id], onDelete: Cascade)
  sectorId  Int?        
  karykarta karykarta[]
  author    User @relation(fields:[authorId], references:[id])
  authorId Int
}

model karykarta {
  id             Int           @id @default(autoincrement())
  name           String
  address        String
  mobileNumber   String
  dob            String
  religion       String
  gender         String
  previousParty  String?       @default("None")
  mundal         Mundal?       @relation(fields: [mundalId], references: [id], onDelete: Cascade)
  mundalId       Int?
  sector         Sector?       @relation(fields: [sectorId], references: [id])
  sectorId       Int?
  poolingBooth   poolingBooth? @relation(fields: [poolingBoothid], references: [id])
  poolingBoothid Int?
  role           Role          @default(karyakarta)
  author         User @relation(fields:[authorId], references:[id])
  authorId       Int
}

enum Role {
  karyakarta
  adhyaksha
  koshadhyaksha
  mahamantri
  mantri
  upaadhyaksha
  adhyakshaBooth
  shaktikendraSanyojak
  shaktikendraprabhari
}

